apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
    }

    String owm_api_key = new File('api_owm').text

    buildTypes {

        debug {
            buildConfigField "String", "OWM_API_KEY", owm_api_key
            debuggable true
            minifyEnabled false
        }
        release {
            buildConfigField "String", "OWM_API_KEY", owm_api_key
            minifyEnabled false
            debuggable false
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'com.google.guava:guava:19.0'
}

//def Properties props = new Properties()
//def propFile = new File('signing.properties')
//if (propFile.canRead()){
//    props.load(new FileInputStream(propFile))
//
//    if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
//            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
//        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
//        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
//        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
//        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
//    } else {
//        println 'signing.properties found but some entries are missing'
//        android.buildTypes.release.signingConfig = null
//    }
//}else {
//    println 'signing.properties not found'
//    android.buildTypes.release.signingConfig = null
//}
